# -*- coding: utf-8 -*-
#
#  TECS Generator
#      Generator for TOPPERS Embedded Component System
#  
#   Copyright (C) 2008-2020 by TOPPERS Project
#--
#   上記著作権者は，以下の(1)〜(4)の条件を満たす場合に限り，本ソフトウェ
#   ア（本ソフトウェアを改変したものを含む．以下同じ）を使用・複製・改
#   変・再配布（以下，利用と呼ぶ）することを無償で許諾する．
#   (1) 本ソフトウェアをソースコードの形で利用する場合には，上記の著作
#       権表示，この利用条件および下記の無保証規定が，そのままの形でソー
#       スコード中に含まれていること．
#   (2) 本ソフトウェアを，ライブラリ形式など，他のソフトウェア開発に使
#       用できる形で再配布する場合には，再配布に伴うドキュメント（利用
#       者マニュアルなど）に，上記の著作権表示，この利用条件および下記
#       の無保証規定を掲載すること．
#   (3) 本ソフトウェアを，機器に組み込むなど，他のソフトウェア開発に使
#       用できない形で再配布する場合には，次のいずれかの条件を満たすこ
#       と．
#     (a) 再配布に伴うドキュメント（利用者マニュアルなど）に，上記の著
#         作権表示，この利用条件および下記の無保証規定を掲載すること．
#     (b) 再配布の形態を，別に定める方法によって，TOPPERSプロジェクトに
#         報告すること．
#   (4) 本ソフトウェアの利用により直接的または間接的に生じるいかなる損
#       害からも，上記著作権者およびTOPPERSプロジェクトを免責すること．
#       また，本ソフトウェアのユーザまたはエンドユーザからのいかなる理
#       由に基づく請求からも，上記著作権者およびTOPPERSプロジェクトを
#       免責すること．
#  
#   本ソフトウェアは，無保証で提供されているものである．上記著作権者お
#   よびTOPPERSプロジェクトは，本ソフトウェアに関して，特定の使用目的
#   に対する適合性も含めて，いかなる保証も行わない．また，本ソフトウェ
#   アの利用により直接的または間接的に生じたいかなる損害に関しても，そ
#   の責任を負わない．
#  
#   $Id: RPCPlugin.rb 3140 2020-03-29 09:21:42Z okuma-top $
#++

require_tecsgen_lib "RPCPlugin.rb"
require_tecsgen_lib "lib/FMPClassManager.rb"

class FMPRPCPlugin < RPCPlugin
  include FMPClassManager

  # FMPRPCPlugin#set_through_info_hook
  #  RPC チャンネル生成リージョンを変更する
  #  呼び先リージョンに生成する必要があるが、呼び先リージョンは呼び元リージョンからは結合できない
  #  
  def set_through_info_hook
    res = analyze_class_name @end_region.get_class_type.get_option
    # callee_prc_kernel_obj       = res[2]
    # callee_locality_kernel_obj  = res[3]
    callee_prc_normal_cell      = res[4]
    # callee_locality_normal_cell = res[5]
    if @end_region.get_node_root == @end_region then
      region = @end_region             # 自身
    else
      region = @end_region.get_owner   # 親リージョン
    end
    new_region_name = :"_rCLS_P#{callee_prc_normal_cell}_FLAT"
    new_region_path = region.get_namespace_path.append new_region_name
    new_region = Namespace.find new_region_path
    dbgPrint "FMPRPCPlugin#set_through_info_hook: #{new_region_path}\n"
    if new_region == nil then
      # 未作成の場合に作成する
      file_name = "#{$gen}/tmp_" + new_region_name.to_s + ".cdl"
      file = CFile.open( file_name, "w" )
      nest = region.gen_region_str_pre file
      indent = "  " * nest
      tecs_class_name = "CLS_P#{callee_prc_normal_cell}_FLAT"
      file.print <<EOT
/*
 * generated by FMPRPCPlugin
 *   呼び先リージョンと同じプロセッサ限定、しかし FLAT な領域となるリージョンの生成
 *     同じプロセッサ限定： RPCTask が呼び先リージョン
 *     FLAT な領域： 呼び元からアクセス可能
 */
#{indent}[class(FMP,"#{tecs_class_name}")]
#{indent}region #{new_region_name}
#{indent}{
#{indent}};
EOT
      region.gen_region_str_post file
      file.close
      Import.new( file_name )
      new_region_path = region.get_namespace_path.append new_region_name
      new_region = Namespace.find new_region_path
    end
    @region = new_region   # RPC チャンネルセルを生成するリージョン
  end
end
